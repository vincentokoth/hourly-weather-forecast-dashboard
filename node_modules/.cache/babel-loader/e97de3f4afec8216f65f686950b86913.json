{"ast":null,"code":"var _jsxFileName = \"/home/vincent/portfolio/react-weather-forecast-dashboard/React-Live-Dashboard/src/components/ChartSection.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ChartSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperatureChartData: {\n        options: {\n          chart: {\n            id: 'temperature-chart',\n            toolbar: {\n              show: false\n            }\n          },\n          grid: {\n            show: false\n          },\n          title: {\n            text: \"Temperature (째C)\",\n            style: {\n              fontSize: '14px',\n              fontWeight: 'bold',\n              color: \"#fcdf03\"\n            }\n          },\n          xaxis: {\n            type: \"datetime\",\n            labels: {\n              style: {\n                colors: '#fcdf03'\n              }\n            }\n          },\n          yaxis: {\n            labels: {\n              formatter: function (value) {\n                return value.toFixed(1) + \"째C\";\n              },\n              style: {\n                colors: '#fcdf03'\n              }\n            }\n          },\n          tooltip: {\n            x: {\n              format: 'dd MMM yyyy'\n            }\n          },\n          colors: [\"#fcdf03\"],\n          fill: {\n            colors: [\"#fcdf03\"],\n            type: 'gradient',\n            gradient: {\n              shadeIntensity: 1,\n              opacityFrom: 0.7,\n              opacityTo: 0,\n              stops: [0, 90, 100]\n            }\n          }\n        },\n        series: [{\n          name: 'Temperature',\n          data: []\n        }]\n      },\n      precipitationProbabilityChartData: {\n        options: {\n          chart: {\n            id: 'precipitation-probability-chart',\n            toolbar: {\n              show: false\n            }\n          },\n          grid: {\n            show: false\n          },\n          title: {\n            text: \"Precipitation Probability (%)\",\n            style: {\n              fontSize: '14px',\n              fontWeight: 'bold',\n              color: \"#fcdf03\"\n            }\n          },\n          xaxis: {\n            type: \"datetime\",\n            labels: {\n              style: {\n                colors: '#fcdf03'\n              }\n            }\n          },\n          yaxis: {\n            labels: {\n              formatter: function (value) {\n                return value.toFixed(1) + \"%\";\n              },\n              style: {\n                colors: '#fcdf03'\n              }\n            }\n          },\n          tooltip: {\n            x: {\n              format: 'dd MMM yyyy'\n            }\n          },\n          colors: [\"#fcdf03\"],\n          fill: {\n            colors: [\"#73BFFF\"],\n            // Blue color gradient for water\n            type: 'gradient',\n            gradient: {\n              shadeIntensity: 1,\n              opacityFrom: 0.7,\n              opacityTo: 0,\n              stops: [0, 90, 100]\n            }\n          }\n        },\n        series: [{\n          name: 'Precipitation Probability',\n          data: []\n        }]\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('Temperature:', this.props.temperature);\n    console.log('Precipitation Probability:', this.props.precipitationProbability);\n\n    if (prevProps.temperature !== this.props.temperature || prevProps.precipitationProbability !== this.props.precipitationProbability) {\n      const temperatureData = this.props.temperature.map((value, index) => ({\n        x: new Date(new Date().setHours(0, 0, 0, 0) + index * 3600 * 1000),\n        y: value\n      }));\n      const precipitationProbabilityData = this.props.precipitationProbability.map((value, index) => ({\n        x: new Date(new Date().setHours(0, 0, 0, 0) + index * 3600 * 1000),\n        y: value\n      }));\n      const temperatureChartData = { ...this.state.temperatureChartData\n      };\n      temperatureChartData.series[0].data = temperatureData;\n      const precipitationProbabilityChartData = { ...this.state.precipitationProbabilityChartData\n      };\n      precipitationProbabilityChartData.series[0].data = precipitationProbabilityData;\n      this.setState({\n        temperatureChartData,\n        precipitationProbabilityChartData\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: { ...this.state.temperatureChartData.options,\n              title: {\n                text: \"Temperature (째C)\",\n                style: {\n                  fontSize: '14px',\n                  fontWeight: 'bold',\n                  color: \"#fcdf03\"\n                }\n              },\n              yaxis: { ...this.state.temperatureChartData.options.yaxis,\n                labels: {\n                  formatter: function (value) {\n                    return value.toFixed(1) + \"째C\";\n                  },\n                  style: {\n                    colors: '#fcdf03'\n                  }\n                }\n              }\n            },\n            series: this.state.temperatureChartData.series,\n            type: \"area\",\n            height: \"300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: { ...this.state.precipitationProbabilityChartData.options,\n              title: {\n                text: \"Precipitation Probability (%)\",\n                style: {\n                  fontSize: '14px',\n                  fontWeight: 'bold',\n                  color: \"#fcdf03\"\n                }\n              },\n              yaxis: { ...this.state.precipitationProbabilityChartData.options.yaxis,\n                labels: {\n                  formatter: function (value) {\n                    return value.toFixed(1) + \"%\";\n                  },\n                  style: {\n                    colors: '#fcdf03'\n                  }\n                }\n              }\n            },\n            series: this.state.precipitationProbabilityChartData.series,\n            type: \"area\",\n            height: \"300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ChartSection;","map":{"version":3,"sources":["/home/vincent/portfolio/react-weather-forecast-dashboard/React-Live-Dashboard/src/components/ChartSection.js"],"names":["React","Component","Chart","ChartSection","constructor","props","state","temperatureChartData","options","chart","id","toolbar","show","grid","title","text","style","fontSize","fontWeight","color","xaxis","type","labels","colors","yaxis","formatter","value","toFixed","tooltip","x","format","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","series","name","data","precipitationProbabilityChartData","componentDidUpdate","prevProps","console","log","temperature","precipitationProbability","temperatureData","map","index","Date","setHours","y","precipitationProbabilityData","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Chart from \"react-apexcharts\";\n\nexport class ChartSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            temperatureChartData: {\n                options: {\n                    chart: {\n                        id: 'temperature-chart',\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    grid: {\n                        show: false\n                    },\n                    title: {\n                        text: \"Temperature (째C)\",\n                        style: {\n                            fontSize: '14px',\n                            fontWeight: 'bold',\n                            color: \"#fcdf03\"\n                        }\n                    },\n                    xaxis: {\n                        type: \"datetime\",\n                        labels: {\n                            style: {\n                                colors: '#fcdf03'\n                            }\n                        }\n                    },\n                    yaxis: {\n                        labels: {\n                            formatter: function (value) {\n                                return value.toFixed(1) + \"째C\";\n                            },\n                            style: {\n                                colors: '#fcdf03'\n                            }\n                        }\n                    },\n                    tooltip: {\n                        x: {\n                            format: 'dd MMM yyyy'\n                        }\n                    },\n                    colors: [\"#fcdf03\"],\n                    fill: {\n                        colors: [\"#fcdf03\"],\n                        type: 'gradient',\n                        gradient: {\n                            shadeIntensity: 1,\n                            opacityFrom: 0.7,\n                            opacityTo: 0,\n                            stops: [0, 90, 100]\n                        }\n                    },\n                },\n                series: [{\n                    name: 'Temperature',\n                    data: []\n                }]\n            },\n            precipitationProbabilityChartData: {\n                options: {\n                    chart: {\n                        id: 'precipitation-probability-chart',\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    grid: {\n                        show: false\n                    },\n                    title: {\n                        text: \"Precipitation Probability (%)\",\n                        style: {\n                            fontSize: '14px',\n                            fontWeight: 'bold',\n                            color: \"#fcdf03\"\n                        }\n                    },\n                    xaxis: {\n                        type: \"datetime\",\n                        labels: {\n                            style: {\n                                colors: '#fcdf03'\n                            }\n                        }\n                    },\n                    yaxis: {\n                        labels: {\n                            formatter: function (value) {\n                                return value.toFixed(1) + \"%\";\n                            },\n                            style: {\n                                colors: '#fcdf03'\n                            }\n                        }\n                    },\n                    tooltip: {\n                        x: {\n                            format: 'dd MMM yyyy'\n                        }\n                    },\n                    colors: [\"#fcdf03\"],\n                    fill: {\n                        colors: [\"#73BFFF\"], // Blue color gradient for water\n                        type: 'gradient',\n                        gradient: {\n                            shadeIntensity: 1,\n                            opacityFrom: 0.7,\n                            opacityTo: 0,\n                            stops: [0, 90, 100]\n                        }\n                    },\n                },\n                series: [{\n                    name: 'Precipitation Probability',\n                    data: []\n                }]\n            }\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log('Temperature:', this.props.temperature);\n        console.log('Precipitation Probability:', this.props.precipitationProbability);\n        if (prevProps.temperature !== this.props.temperature || prevProps.precipitationProbability !== this.props.precipitationProbability) {\n            const temperatureData = this.props.temperature.map((value, index) => ({\n                x: new Date(new Date().setHours(0, 0, 0, 0) + index * 3600 * 1000),\n                y: value\n            }));\n            const precipitationProbabilityData = this.props.precipitationProbability.map((value, index) => ({\n                x: new Date(new Date().setHours(0, 0, 0, 0) + index * 3600 * 1000),\n                y: value\n            }));\n            const temperatureChartData = { ...this.state.temperatureChartData };\n            temperatureChartData.series[0].data = temperatureData;\n            const precipitationProbabilityChartData = { ...this.state.precipitationProbabilityChartData };\n            precipitationProbabilityChartData.series[0].data = precipitationProbabilityData;\n            this.setState({ temperatureChartData, precipitationProbabilityChartData });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Chart\n                            options={{\n                                ...this.state.temperatureChartData.options,\n                                title: {\n                                    text: \"Temperature (째C)\",\n                                    style: {\n                                        fontSize: '14px',\n                                        fontWeight: 'bold',\n                                        color: \"#fcdf03\"\n                                    }\n                                },\n                                yaxis: {\n                                    ...this.state.temperatureChartData.options.yaxis,\n                                    labels: {\n                                        formatter: function (value) {\n                                            return value.toFixed(1) + \"째C\";\n                                        },\n                                        style: {\n                                            colors: '#fcdf03'\n                                        }\n                                    }\n                                }\n                            }}\n                            series={this.state.temperatureChartData.series}\n                            type=\"area\"\n                            height=\"300\"\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Chart\n                            options={{\n                                ...this.state.precipitationProbabilityChartData.options,\n                                title: {\n                                    text: \"Precipitation Probability (%)\",\n                                    style: {\n                                        fontSize: '14px',\n                                        fontWeight: 'bold',\n                                        color: \"#fcdf03\"\n                                    }\n                                },\n                                yaxis: {\n                                    ...this.state.precipitationProbabilityChartData.options.yaxis,\n                                    labels: {\n                                        formatter: function (value) {\n                                            return value.toFixed(1) + \"%\";\n                                        },\n                                        style: {\n                                            colors: '#fcdf03'\n                                        }\n                                    }\n                                }\n                            }}\n                            series={this.state.precipitationProbabilityChartData.series}\n                            type=\"area\"\n                            height=\"300\"\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChartSection;"]},"metadata":{},"sourceType":"module"}